//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 16.0.30104.148
// 
namespace client_desktop.HouseServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="House", Namespace="http://schemas.datacontract.org/2004/07/HouseManagerService")]
    public partial class House : object, System.ComponentModel.INotifyPropertyChanged {
        
        private client_desktop.HouseServiceReference.Address AddressField;
        
        private System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.ChatMessage> ChatField;
        
        private System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.Chore> ChoresField;
        
        private int IdField;
        
        private string InviteCodeField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.PersonToHouse> PeopleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_desktop.HouseServiceReference.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.ChatMessage> Chat {
            get {
                return this.ChatField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatField, value) != true)) {
                    this.ChatField = value;
                    this.RaisePropertyChanged("Chat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.Chore> Chores {
            get {
                return this.ChoresField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoresField, value) != true)) {
                    this.ChoresField = value;
                    this.RaisePropertyChanged("Chores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InviteCode {
            get {
                return this.InviteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InviteCodeField, value) != true)) {
                    this.InviteCodeField = value;
                    this.RaisePropertyChanged("InviteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.PersonToHouse> People {
            get {
                return this.PeopleField;
            }
            set {
                if ((object.ReferenceEquals(this.PeopleField, value) != true)) {
                    this.PeopleField = value;
                    this.RaisePropertyChanged("People");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/HouseManagerService")]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private string DoorNoField;
        
        private short FloorNoField;
        
        private string HouseNoField;
        
        private int IdField;
        
        private string StreetField;
        
        private int ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorNo {
            get {
                return this.DoorNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorNoField, value) != true)) {
                    this.DoorNoField = value;
                    this.RaisePropertyChanged("DoorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FloorNo {
            get {
                return this.FloorNoField;
            }
            set {
                if ((this.FloorNoField.Equals(value) != true)) {
                    this.FloorNoField = value;
                    this.RaisePropertyChanged("FloorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatMessage", Namespace="http://schemas.datacontract.org/2004/07/HouseManagerService")]
    public partial class ChatMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string MessageField;
        
        private System.DateTime SendDateField;
        
        private client_desktop.HouseServiceReference.Person SenderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendDate {
            get {
                return this.SendDateField;
            }
            set {
                if ((this.SendDateField.Equals(value) != true)) {
                    this.SendDateField = value;
                    this.RaisePropertyChanged("SendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_desktop.HouseServiceReference.Person Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chore", Namespace="http://schemas.datacontract.org/2004/07/HouseManagerService")]
    public partial class Chore : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private System.DateTime DueDateField;
        
        private int IdField;
        
        private client_desktop.HouseServiceReference.Person PersonField;
        
        private byte StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_desktop.HouseServiceReference.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonToHouse", Namespace="http://schemas.datacontract.org/2004/07/HouseManagerService")]
    public partial class PersonToHouse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsOwnerField;
        
        private System.DateTime MoveInDateField;
        
        private System.Nullable<System.DateTime> MoveOutDateField;
        
        private client_desktop.HouseServiceReference.Person PersonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOwner {
            get {
                return this.IsOwnerField;
            }
            set {
                if ((this.IsOwnerField.Equals(value) != true)) {
                    this.IsOwnerField = value;
                    this.RaisePropertyChanged("IsOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MoveInDate {
            get {
                return this.MoveInDateField;
            }
            set {
                if ((this.MoveInDateField.Equals(value) != true)) {
                    this.MoveInDateField = value;
                    this.RaisePropertyChanged("MoveInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MoveOutDate {
            get {
                return this.MoveOutDateField;
            }
            set {
                if ((this.MoveOutDateField.Equals(value) != true)) {
                    this.MoveOutDateField = value;
                    this.RaisePropertyChanged("MoveOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_desktop.HouseServiceReference.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/HouseManagerService")]
    public partial class Person : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateOfBirthField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string PassWordField;
        
        private string PhoneField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HouseServiceReference.IHouseService")]
    public interface IHouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/CreateHouse", ReplyAction="http://tempuri.org/IHouseService/CreateHouseResponse")]
        System.Threading.Tasks.Task<bool> CreateHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/UpdateHouse", ReplyAction="http://tempuri.org/IHouseService/UpdateHouseResponse")]
        System.Threading.Tasks.Task<bool> UpdateHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/GetAllHouse", ReplyAction="http://tempuri.org/IHouseService/GetAllHouseResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.House>> GetAllHouseAsync(string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/DeleteHouse", ReplyAction="http://tempuri.org/IHouseService/DeleteHouseResponse")]
        System.Threading.Tasks.Task<bool> DeleteHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/JoinHouse", ReplyAction="http://tempuri.org/IHouseService/JoinHouseResponse")]
        System.Threading.Tasks.Task<bool> JoinHouseAsync(string invitecode, string sessionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/LeaveHouse", ReplyAction="http://tempuri.org/IHouseService/LeaveHouseResponse")]
        System.Threading.Tasks.Task<bool> LeaveHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHouseServiceChannel : client_desktop.HouseServiceReference.IHouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HouseServiceClient : System.ServiceModel.ClientBase<client_desktop.HouseServiceReference.IHouseService>, client_desktop.HouseServiceReference.IHouseService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HouseServiceClient() : 
                base(HouseServiceClient.GetDefaultBinding(), HouseServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IHouseService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HouseServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(HouseServiceClient.GetBindingForEndpoint(endpointConfiguration), HouseServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HouseServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HouseServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HouseServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HouseServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> CreateHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid) {
            return base.Channel.CreateHouseAsync(house, sessionid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid) {
            return base.Channel.UpdateHouseAsync(house, sessionid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<client_desktop.HouseServiceReference.House>> GetAllHouseAsync(string sessionid) {
            return base.Channel.GetAllHouseAsync(sessionid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid) {
            return base.Channel.DeleteHouseAsync(house, sessionid);
        }
        
        public System.Threading.Tasks.Task<bool> JoinHouseAsync(string invitecode, string sessionid) {
            return base.Channel.JoinHouseAsync(invitecode, sessionid);
        }
        
        public System.Threading.Tasks.Task<bool> LeaveHouseAsync(client_desktop.HouseServiceReference.House house, string sessionid) {
            return base.Channel.LeaveHouseAsync(house, sessionid);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHouseService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHouseService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/HouseManagerService/HouseService/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return HouseServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IHouseService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return HouseServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IHouseService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IHouseService,
        }
    }
}
